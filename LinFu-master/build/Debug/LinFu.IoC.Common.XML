<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinFu.IoC.Common</name>
    </assembly>
    <members>
        <member name="T:LinFu.IoC.Configuration.FactoryAttribute">
            <summary>
            An attribute that marks a type as a custom factory.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.FactoryAttribute.ArgumentTypes">
            <summary>
            The additional parameters supported by the custom factory.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.FactoryAttribute.ServiceName">
            <summary>
            The service name that will be associated
            with the service type.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Configuration.FactoryAttribute.#ctor(System.Type)">
            <summary>
            Marks a target type as a custom factory
            that can create object instances that
            can implement the <paramref name="serviceType" />.
            </summary>
            <param name="serviceType">The service type to create.</param>
        </member>
        <member name="P:LinFu.IoC.Configuration.FactoryAttribute.ServiceType">
            <summary>
            Gets the service type that can be created
            using the factory instance.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IContainer">
            <summary>
            An inversion of control container interface.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IContainer.AvailableServices">
            <summary>
            The list of services currently available inside the container.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IContainer.SuppressErrors">
            <summary>
            Determines whether or not a container will throw an exception
            if the requested service is not found.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IContainer.AddFactory(System.Type,System.Collections.Generic.IEnumerable{System.Type},LinFu.IoC.Interfaces.IFactory)">
            <summary>
            Adds an <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance and associates it
            with the given <paramref name="serviceType">service type</paramref>.
            </summary>
            <param name="serviceType">The service type to associate with the factory</param>
            <param name="additionalParameterTypes">The list of additional parameters that this factory type will support.</param>
            <param name="factory">The <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance that will be responsible for creating the service instance</param>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IContainer.Contains(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Determines whether or not the container can create
            the given <paramref name="serviceType">service type</paramref>.
            </summary>
            <param name="serviceType">The type of service used to determine whether or not the given service can actually be created</param>
            <param name="additionalParameterTypes">The list of additional parameters that this factory type will support.</param>
            <returns>A <see cref="T:System.Boolean">boolean</see> value that indicates whether or not the service exists.</returns>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IContainer.GetService(System.Type,System.Object[])">
            <summary>
            Causes the container to instantiate the service with the given
            <paramref name="serviceType">service type</paramref>. If the service type cannot be created, then an
            exception will be thrown if the <see cref="P:LinFu.IoC.Interfaces.IContainer.SuppressErrors" /> property
            is set to false. Otherwise, it will simply return null.
            </summary>
            <param name="serviceType">The service type to instantiate.</param>
            <param name="additionalArguments">The additional arguments that will be used to instantiate the service type.</param>
            <returns>If successful, it will return a service instance that is compatible with the given type;
            otherwise, it will just return a null value.</returns>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IFactory">
            <summary>
            Allows an object to create its own service instances.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IFactory.CreateInstance(LinFu.IoC.Interfaces.IFactoryRequest)">
            <summary>
            Creates a service instance using the given <see cref="T:LinFu.IoC.Interfaces.IFactoryRequest" /> instance.
            </summary>
            <param name="request">The <see cref="T:LinFu.IoC.Interfaces.IFactoryRequest" /> instance that describes the requested service.</param>
            <returns>An object instance that represents the service to be created. This cannot be <c>null</c>.</returns>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IFactoryRequest">
            <summary>
            Represents the parameters made to a <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance during
            a <see cref="M:LinFu.IoC.Interfaces.IFactory.CreateInstance(LinFu.IoC.Interfaces.IFactoryRequest)" /> method call.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IFactoryRequest.Container">
            <summary>
            Gets or sets the value indicating the service container that made the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IFactoryRequest.ServiceName">
            <summary>
            Gets the value indicating the service name.
            </summary>
            <remarks>A null service name indicates that no service name was given during the request.</remarks>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IFactoryRequest.ServiceType">
            <summary>
            Gets the value indicating the requested service type.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IFactoryRequest.Arguments">
            <summary>
            Gets the value indicating the additional arguments given in the factory request.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Configuration.IInitialize">
            <summary>
            Represents service classes that need to be initialized
            every time a particular <see cref="T:LinFu.IoC.Interfaces.IServiceContainer" />
            instance creates that type.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Configuration.ImplementsAttribute">
            <summary>
            The attribute used to specify how a service should be implemented
            in addition to its instancing behavior.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.ImplementsAttribute.ServiceName">
            <summary>
            The name to associate with the given service.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Configuration.ImplementsAttribute.#ctor(System.Type)">
            <summary>
            Allows users to add services to a container using a
            given <paramref name="serviceType">service type</paramref>.
            </summary>
            <remarks>By default, each service will be created once per request.</remarks>
            <param name="serviceType">The <see cref="T:System.Type" /> of service to implement.</param>
        </member>
        <member name="M:LinFu.IoC.Configuration.ImplementsAttribute.#ctor(System.Type,LinFu.IoC.Configuration.LifecycleType)">
            <summary>
            Allows users to add services to a container using a
            given <paramref name="serviceType">service type</paramref> and
            <paramref name="lifeCycleType">lifecycle type</paramref>.
            </summary>
            <param name="serviceType">The <see cref="T:System.Type" /> of service to implement.</param>
            <param name="lifeCycleType">The instancing behavior to use with this implementation.</param>
        </member>
        <member name="P:LinFu.IoC.Configuration.ImplementsAttribute.ServiceType">
            <summary>
            The type of service that will be implemented.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Configuration.ImplementsAttribute.LifecycleType">
            <summary>
            The instancing behavior of the service instance.
            </summary>
            <seealso cref="T:LinFu.IoC.Configuration.LifecycleType" />
        </member>
        <member name="T:LinFu.IoC.Interfaces.IPostProcessor">
            <summary>
            Represents a class that can inspect or modify service requests
            from a given container once a service is created.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IPostProcessor.PostProcess(LinFu.IoC.Interfaces.IServiceRequestResult)">
            <summary>
            Allows a <see cref="T:LinFu.IoC.Interfaces.IPostProcessor" /> instance
            to inspect or modify the result of a service request.
            </summary>
            <seealso cref="T:LinFu.IoC.Interfaces.IServiceRequestResult" />
            <param name="result">The <see cref="T:LinFu.IoC.Interfaces.IServiceRequestResult" /> created as a result of the container operation.</param>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IPreProcessor">
            <summary>
            Represents a class that can inspect or modify service requests
            from a given container before a service is created.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IPreProcessor.Preprocess(LinFu.IoC.Interfaces.IServiceRequest)">
            <summary>
            Allows a <see cref="T:LinFu.IoC.Interfaces.IPostProcessor" /> instance
            to inspect or modify the result of a service request
            just before the service is instantiated.
            </summary>
            <seealso cref="T:LinFu.IoC.Interfaces.IServiceRequestResult" />
            <param name="request">The <see cref="T:LinFu.IoC.Interfaces.IServiceRequest" /> instance that describes the nature of the service that needs to be created. </param>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IServiceContainer">
            <summary>
            An inversion of control container that supports
            named services.
            </summary>
            <seealso name="IContainer" />
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceContainer.PreProcessors">
            <summary>
            The list of preprocessors that will handle
            every service request before each actual service is created.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceContainer.PostProcessors">
            <summary>
            The list of postprocessors that will handle every
            service request result.
            </summary>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IServiceContainer.AddFactory(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type},LinFu.IoC.Interfaces.IFactory)">
            <summary>
            Adds an <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance and associates it
            with the given <paramref name="serviceType">service type</paramref> and
            <paramref name="serviceName">service name</paramref>.
            </summary>
            <param name="serviceName">The name of the service to associate with the given <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance.</param>
            <param name="serviceType">The type of service that the factory will be able to create.</param>
            <param name="additionalParameterTypes">The list of additional parameters that this factory type will support.</param>
            <param name="factory">The <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance that will create the object instance.</param>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IServiceContainer.Contains(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Determines whether or not a service can be created using
            the given <paramref name="serviceName">service name</paramref>
            and <paramref name="serviceType">service type</paramref>.
            </summary>
            <param name="serviceName">The name of the service to associate with the given <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance.</param>
            <param name="serviceType">The type of service that the factory will be able to create.</param>
            <param name="additionalParameterTypes">The list of additional parameters that the factory type must support.</param>
            <returns>Returns <c>true</c> if the service exists; otherwise, it will return <c>false</c>.</returns>
        </member>
        <member name="M:LinFu.IoC.Interfaces.IServiceContainer.GetService(System.String,System.Type,System.Object[])">
            <summary>
            Causes the container to instantiate the service with the given
            <paramref name="serviceType">service type</paramref>. If the service type cannot be created, then an
            exception will be thrown if the <see cref="P:LinFu.IoC.Interfaces.IContainer.SuppressErrors" /> property
            is set to false. Otherwise, it will simply return null.
            </summary>
            <param name="serviceName">The name of the service to instantiate.</param>
            <param name="serviceType">The service type to instantiate.</param>
            <param name="additionalArguments">The additional arguments that will be used to instantiate the service type.</param>
            <returns>If successful, it will return a service instance that is compatible with the given type;
            otherwise, it will just return a <c>null</c> value.</returns>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IServiceInfo">
            <summary>
            A class that describes a single service
            provided by a container.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceInfo.ServiceName">
            <summary>
            The name of the service being created. By default, this property is blank.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceInfo.ServiceType">
            <summary>
            The type of service being requested.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceInfo.ArgumentTypes">
            <summary>
            Gets a value indicating the list of arguments required by this particular service.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IServiceRequest">
            <summary>
            Represents a class that describes the context of a service request made to a service container.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequest.Container">
            <summary>
            The container that will handle the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequest.ActualArguments">
            <summary>
            Gets or sets the value indicating the actual arguments that
            will be used for the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequest.ProposedArguments">
            <summary>
            Gets the value indicating the original arguments that
            were given during the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequest.ProposedFactory">
            <summary>
            Gets the value indicating the original <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance
            that will be used to handle the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequest.ActualFactory">
            <summary>
            Gets or sets the value indicating the actual <see cref="T:LinFu.IoC.Interfaces.IFactory" /> instance
            that will be used to handle the service request.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Interfaces.IServiceRequestResult">
            <summary>
            Represents the results returned when a service request
            is made against an <see cref="T:LinFu.IoC.Interfaces.IServiceContainer" /> instance.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.ServiceName">
            <summary>
            The name of the service being created. By default, this property is blank.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.ServiceType">
            <summary>
            The type of service being requested.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.OriginalResult">
            <summary>
            The raw object reference created by the container itself.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.ActualResult">
            <summary>
            The result that will be returned from the container
            instead of the <see cref="P:LinFu.IoC.Interfaces.IServiceRequestResult.OriginalResult" />.
            If this property is null, then the original result will be used.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.Container">
            <summary>
            The container that will handle the service request.
            </summary>
        </member>
        <member name="P:LinFu.IoC.Interfaces.IServiceRequestResult.AdditionalArguments">
            <summary>
            Gets the value indicating the additional arguments that
            were used during the service request.
            </summary>
        </member>
        <member name="T:LinFu.IoC.Configuration.LifecycleType">
            <summary>
            An enumeration that denotes the instance behavior
            of a particular object reference.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.LifecycleType.OncePerRequest">
            <summary>
            This means that a new object instance
            will be created on each call.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.LifecycleType.OncePerThread">
            <summary>
            This means that a new object instance
            will be created only once per thread.
            </summary>
        </member>
        <member name="F:LinFu.IoC.Configuration.LifecycleType.Singleton">
            <summary>
            This means that only a single object instance
            will ever be created in spite of the number of
            subsequent requests for a new object instance.
            </summary>
        </member>
    </members>
</doc>
